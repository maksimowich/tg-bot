from aiogram import types
from aiogram.utils.keyboard import InlineKeyboardBuilder
from sqlalchemy.ext.asyncio import AsyncSession

from src.handlers.cart import router
from src.services import CartService


@router.callback_query(lambda c: c.data == "view_cart")
async def view_cart(
        callback: types.CallbackQuery,
        session: AsyncSession,
):
    user_id = callback.from_user.id

    cart_items = await CartService.get_cart_items(
        session=session,
        user_id=str(user_id),
    )

    if not cart_items:
        await callback.message.answer("–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.")

    else:
        text = "–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞:\n\n"
        builder = InlineKeyboardBuilder()

        for cart_item in cart_items:
            text += f"üì¶ –¢–æ–≤–∞—Ä {cart_item.product_id} ‚Äî {cart_item.quantity} —à—Ç.\n"
            builder.button(
                text=f"‚ùå –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä {cart_item.product_id}",
                callback_data=f"remove_from_cart_{cart_item.id}",
            )

        builder.button(
            text="–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É",
            callback_data="clear_cart",
        )

        builder.button(
            text="Ô∏è–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑",
            callback_data="make_order",
        )

        await callback.message.answer(
            text,
            reply_markup=builder.as_markup(),
        )
        await callback.answer()
